[{"C:\\Users\\user\\internship\\src\\index.js":"1","C:\\Users\\user\\internship\\src\\App.js":"2","C:\\Users\\user\\internship\\src\\reportWebVitals.js":"3","C:\\Users\\user\\internship\\src\\apicall.js":"4","C:\\Users\\user\\internship\\src\\components\\right.jsx":"5","C:\\Users\\user\\internship\\src\\components\\left.jsx":"6"},{"size":500,"mtime":1615004014843,"results":"7","hashOfConfig":"8"},{"size":6299,"mtime":1616398907045,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1615004057968,"results":"10","hashOfConfig":"8"},{"size":400,"mtime":1616238096198,"results":"11","hashOfConfig":"8"},{"size":390,"mtime":1616396542016,"results":"12","hashOfConfig":"8"},{"size":1350,"mtime":1616397869811,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"17b32vk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\Users\\user\\internship\\src\\index.js",[],["28","29"],"C:\\Users\\user\\internship\\src\\App.js",["30","31","32","33"],"C:\\Users\\user\\internship\\src\\reportWebVitals.js",[],"C:\\Users\\user\\internship\\src\\apicall.js",[],"C:\\Users\\user\\internship\\src\\components\\right.jsx",[],"C:\\Users\\user\\internship\\src\\components\\left.jsx",["34"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport  './left.css'\r\nimport {Grid} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nconst Left=({events})=>{\r\n\r\n\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [buffer, setBuffer] = React.useState(10);\r\n\r\n  const progressRef = React.useRef(() => {});\r\n  React.useEffect(() => {\r\n    progressRef.current = () => {\r\n      if (progress > 100) {\r\n        setProgress(0);\r\n        setBuffer(10);\r\n      } else {\r\n        const diff = Math.random() * 10;\r\n        const diff2 = Math.random() * 10;\r\n        setProgress(progress + diff);\r\n        setBuffer(progress + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      progressRef.current();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Grid>\r\n      <div className=\"progress-bar\">\r\n      <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer}  />\r\n      {events.scan.map((s)=><tr><td>{s.to}</td><td>{s.location}</td><td>{s.status_detail}</td><td>{s.time}</td></tr>)}\r\n    </div>\r\n    </Grid>\r\n    \r\n  );\r\n}\r\n\r\nexport default Left\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":67,"column":9,"nodeType":"41","messageId":"42","endLine":67,"endColumn":21},{"ruleId":"43","severity":1,"message":"44","line":208,"column":11,"nodeType":"45","messageId":"46","endLine":208,"endColumn":13},{"ruleId":"43","severity":1,"message":"44","line":208,"column":132,"nodeType":"45","messageId":"46","endLine":208,"endColumn":134},{"ruleId":"43","severity":1,"message":"44","line":208,"column":221,"nodeType":"45","messageId":"46","endLine":208,"endColumn":223},{"ruleId":"39","severity":1,"message":"47","line":7,"column":7,"nodeType":"41","messageId":"42","endLine":7,"endColumn":16},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]