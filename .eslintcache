[{"C:\\Users\\user\\internship\\src\\index.js":"1","C:\\Users\\user\\internship\\src\\App.js":"2","C:\\Users\\user\\internship\\src\\reportWebVitals.js":"3","C:\\Users\\user\\internship\\src\\apicall.js":"4","C:\\Users\\user\\internship\\src\\components\\right.jsx":"5","C:\\Users\\user\\internship\\src\\components\\left.jsx":"6"},{"size":500,"mtime":1615004014843,"results":"7","hashOfConfig":"8"},{"size":11613,"mtime":1616380932638,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1615004057968,"results":"10","hashOfConfig":"8"},{"size":400,"mtime":1616238096198,"results":"11","hashOfConfig":"8"},{"size":257,"mtime":1616348765525,"results":"12","hashOfConfig":"8"},{"size":1568,"mtime":1616380250898,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"17b32vk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\Users\\user\\internship\\src\\index.js",[],["28","29"],"C:\\Users\\user\\internship\\src\\App.js",["30","31","32","33","34"],"C:\\Users\\user\\internship\\src\\reportWebVitals.js",[],"C:\\Users\\user\\internship\\src\\apicall.js",[],"C:\\Users\\user\\internship\\src\\components\\right.jsx",[],"C:\\Users\\user\\internship\\src\\components\\left.jsx",["35","36"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nconst Left=({events})=>{\r\n\r\n\r\n\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [buffer, setBuffer] = React.useState(10);\r\n\r\n  const progressRef = React.useRef(() => {});\r\n  React.useEffect(() => {\r\n    progressRef.current = () => {\r\n      if (progress > 100) {\r\n        setProgress(0);\r\n        setBuffer(10);\r\n      } else {\r\n        const diff = Math.random() * 10;\r\n        const diff2 = Math.random() * 10;\r\n        setProgress(progress + diff);\r\n        setBuffer(progress + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      progressRef.current();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  const ifDisplay=(events)=>{\r\n    \r\n    \r\n    if (events!=undefined){\r\n      const {scan}=events;\r\n      console.log(scan)\r\n      return(scan.forEach((scans)=><p>{scans.time}{scans.status_detail}{scans.location}</p>))\r\n      // console.log(events)\r\n      // return <p>hello</p>\r\n    }    \r\n  }\r\n  if (events==undefined){\r\n    console.log(events)\r\n    return <p>not data</p>\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} />\r\n      {ifDisplay()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Left\r\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":218,"column":5,"nodeType":"43","endLine":218,"endColumn":7,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":220,"column":9,"nodeType":"47","messageId":"48","endLine":220,"endColumn":21},{"ruleId":"49","severity":1,"message":"50","line":386,"column":11,"nodeType":"51","messageId":"52","endLine":386,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":386,"column":83,"nodeType":"51","messageId":"52","endLine":386,"endColumn":85},{"ruleId":"49","severity":1,"message":"50","line":386,"column":133,"nodeType":"51","messageId":"52","endLine":386,"endColumn":135},{"ruleId":"49","severity":1,"message":"53","line":52,"column":15,"nodeType":"51","messageId":"52","endLine":52,"endColumn":17},{"ruleId":"49","severity":1,"message":"50","line":60,"column":13,"nodeType":"51","messageId":"52","endLine":60,"endColumn":15},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["56"],"no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [data]",{"range":"59","text":"60"},[6010,6012],"[data]"]